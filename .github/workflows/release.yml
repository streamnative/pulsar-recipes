name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH: branch-${{ inputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create release branch
        run: |
          git push origin --delete ${{ env.RELEASE_BRANCH }} || true
          git branch -D ${{ env.RELEASE_BRANCH }} || true
          git checkout -b ${{ env.RELEASE_BRANCH }}
          scripts/set-project-version.sh ${{ inputs.version }}
          git commit -m "Release ${{ inputs.version }}" -a --allow-empty
          git push origin --set-upstream ${{ env.RELEASE_BRANCH }}

          git push --delete origin v${{ inputs.version }} || true
          git tag -d v${{ inputs.version }} || true
          git tag v${{ inputs.version }}
          git push origin v${{ inputs.version }}

      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ inputs.version }}
          release_name: Release ${{ inputs.version }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set up Maven
        uses: s4u/setup-maven-action@v1.5.0
        with:
          maven-version: 3.8.6

      - uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: '[{"id": "ossrh", "username": "${{ secrets.SONATYPE_USERNAME }}", "password": "${{ secrets.SONATYPE_PASSWORD }}"}]'

      - name: Deploy to Maven Central
        run: mvn clean deploy -DskipTests
